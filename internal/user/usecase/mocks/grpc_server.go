// Code generated by MockGen. DO NOT EDIT.
// Source: google.golang.org/grpc (interfaces: ServerTransportStream)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	metadata "google.golang.org/grpc/metadata"
)

// MockServerTransportStream is a mock of ServerTransportStream interface.
type MockServerTransportStream struct {
	ctrl     *gomock.Controller
	recorder *MockServerTransportStreamMockRecorder
}

// MockServerTransportStreamMockRecorder is the mock recorder for MockServerTransportStream.
type MockServerTransportStreamMockRecorder struct {
	mock *MockServerTransportStream
}

// NewMockServerTransportStream creates a new mock instance.
func NewMockServerTransportStream(ctrl *gomock.Controller) *MockServerTransportStream {
	mock := &MockServerTransportStream{ctrl: ctrl}
	mock.recorder = &MockServerTransportStreamMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerTransportStream) EXPECT() *MockServerTransportStreamMockRecorder {
	return m.recorder
}

// Method mocks base method.
func (m *MockServerTransportStream) Method() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Method")
	ret0, _ := ret[0].(string)
	return ret0
}

// Method indicates an expected call of Method.
func (mr *MockServerTransportStreamMockRecorder) Method() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Method", reflect.TypeOf((*MockServerTransportStream)(nil).Method))
}

// SendHeader mocks base method.
func (m *MockServerTransportStream) SendHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendHeader indicates an expected call of SendHeader.
func (mr *MockServerTransportStreamMockRecorder) SendHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHeader", reflect.TypeOf((*MockServerTransportStream)(nil).SendHeader), arg0)
}

// SetHeader mocks base method.
func (m *MockServerTransportStream) SetHeader(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetHeader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetHeader indicates an expected call of SetHeader.
func (mr *MockServerTransportStreamMockRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockServerTransportStream)(nil).SetHeader), arg0)
}

// SetTrailer mocks base method.
func (m *MockServerTransportStream) SetTrailer(arg0 metadata.MD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetTrailer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetTrailer indicates an expected call of SetTrailer.
func (mr *MockServerTransportStreamMockRecorder) SetTrailer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTrailer", reflect.TypeOf((*MockServerTransportStream)(nil).SetTrailer), arg0)
}
